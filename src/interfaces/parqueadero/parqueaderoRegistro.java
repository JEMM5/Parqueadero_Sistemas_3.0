/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces.parqueadero;

import javax.swing.JComboBox;
import javax.swing.JOptionPane;

import java.awt.Image;
import java.awt.Toolkit;

import java.sql.*;
import java.io.*;

import com.parqueaderosistemas.negocio.*;

import fecha.parqueadero.*;
//import java.awt.Desktop;
import java.awt.Font;
import pdf.reportediario.parqueadero.*;
/////////////////////
import java.util.*;
import javax.swing.JLabel;
//////////la lista
/**
 *
 * @author JONATHAN
 */
public class parqueaderoRegistro extends javax.swing.JFrame {

    /**
     * Creates new form parqueaderoRegistro
     */
    private JComboBox comboBox1;
    private static String texto_area = "";
    List<String> listaParqueos = new ArrayList();
 
    String text2;
       
    private JComboBox tipoHoraE;
    private JComboBox tipoHoraS;
    
    public JLabel labelHora;
    public JLabel labelHora2;

    public parqueaderoRegistro() {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setBounds(0,0,700,573);
        comboBox1 = new JComboBox();
        comboBox1.setBounds(133, 198, 153, 30);
        add(comboBox1);

        comboBox1.addItem("");
        comboBox1.addItem("Carro");
        comboBox1.addItem("Vehiculo Pesado");
        comboBox1.addItem("Moto");
        
        //
        txt_salida.setText("0");
        txt_horas.setText("0");
        txt_valor.setText("0");
        //
        tipoHoraS = new JComboBox();
        tipoHoraS.setBounds(220,390,50,30);
        add(tipoHoraS);
        
        tipoHoraS.addItem("AM");
        tipoHoraS.addItem("PM");
        
        tipoHoraE = new JComboBox();
        tipoHoraE.setBounds(220,350,50,30);
        add(tipoHoraE);
        
        tipoHoraE.addItem("AM");
        tipoHoraE.addItem("PM");
        
        
        ///////
        labelHora = new JLabel("Hora");
        labelHora.setBounds(238,413,50,30);
        labelHora.setFont(new Font("Dialog",1,10));
        add(labelHora);
        
        labelHora2 = new JLabel("Min.");
        labelHora2.setBounds(286,413,50,30);
        labelHora2.setFont(new Font("Dialog",1,10));
        add(labelHora2);

        //hilos
        AsignarFecha af = new AsignarFecha(label_fecha);
        af.start();
        
        AsignarHora ah = new AsignarHora(label_hora);
        ah.start();
        
        //txt_entrada.setText("2:30");
       

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_placa = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        txt_modelo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txt_color = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_entrada = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txt_salida = new javax.swing.JTextField();
        boton_generar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_area = new javax.swing.JTextArea();
        boton_buscar = new javax.swing.JButton();
        botonRegistrar = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txt_valor = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        botonAtras = new javax.swing.JButton();
        label_status = new javax.swing.JLabel();
        txt_horas = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txt_numero = new javax.swing.JLabel();
        boton_limpiar = new javax.swing.JButton();
        label_fecha = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        label_hora = new javax.swing.JLabel();
        txt_minutos = new javax.swing.JTextField();
        txtBuscar = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/parqueadero/images/cintaP.png"))); // NOI18N

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/parqueadero/images/cintaP.png"))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        jLabel6.setText("Registro");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/parqueadero/images/parkingCP.png"))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Impact", 0, 36)); // NOI18N
        jLabel4.setText("ARQUEADERO");

        jLabel5.setText("Modelo:");

        jLabel8.setText("Color:");

        jLabel9.setText("Placa:");

        jLabel7.setText("Hora de Entrada:");

        jLabel10.setText("Hora de Salida:");

        txt_salida.setBackground(new java.awt.Color(204, 204, 204));

        boton_generar.setText("Generar ticket");
        boton_generar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_generarActionPerformed(evt);
            }
        });

        txt_area.setColumns(20);
        txt_area.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        txt_area.setRows(5);
        jScrollPane1.setViewportView(txt_area);

        boton_buscar.setText("Buscar");
        boton_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_buscarActionPerformed(evt);
            }
        });

        botonRegistrar.setText("Registrar");
        botonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegistrarActionPerformed(evt);
            }
        });

        jLabel11.setText("Valor a Pagar:");

        txt_valor.setBackground(new java.awt.Color(204, 204, 204));
        txt_valor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_valorActionPerformed(evt);
            }
        });

        jLabel12.setText("Tipo:");

        botonAtras.setText("< | Atras");
        botonAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAtrasActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel14.setText("PARQUEO NO.");

        txt_numero.setBackground(new java.awt.Color(204, 204, 204));
        txt_numero.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        txt_numero.setForeground(new java.awt.Color(255, 0, 51));

        boton_limpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/parqueadero/images/borrador.png"))); // NOI18N
        boton_limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_limpiarActionPerformed(evt);
            }
        });

        label_fecha.setText(" ");
        label_fecha.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel15.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabel15.setText("HORA:");

        label_hora.setText(" ");

        txt_minutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_minutosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator1)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(jLabel6)))
                        .addGap(194, 194, 194))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(102, 102, 102)
                                        .addComponent(txt_horas, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_minutos)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(txt_numero, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(3, 3, 3))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txt_entrada, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txt_color, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                                                .addComponent(txt_modelo)
                                                .addComponent(txt_placa)))
                                        .addGap(37, 37, 37)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(label_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(boton_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel15)
                                                .addGap(18, 18, 18)
                                                .addComponent(label_hora, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(botonRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(boton_generar)
                                        .addGap(18, 18, 18)
                                        .addComponent(boton_limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txt_salida, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txt_valor, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(188, 188, 188)))
                                .addComponent(label_status, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(botonAtras)))
                        .addGap(34, 34, 34))))
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15)
                        .addComponent(label_hora)
                        .addComponent(label_fecha)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 89, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(txt_numero))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_placa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_modelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(txt_entrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(txt_salida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(txt_valor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_horas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_minutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(boton_buscar)
                            .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(botonAtras))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(15, 15, 15)
                            .addComponent(label_status, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(boton_limpiar)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(botonRegistrar)
                                .addComponent(boton_generar)))))
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_valorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_valorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_valorActionPerformed

    private void botonAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAtrasActionPerformed
        parqueaderoBienvenida pb = new parqueaderoBienvenida();
        pb.setBounds(0,0,598,313);
        pb.setVisible(true);
        pb.setResizable(false);
        pb.setLocationRelativeTo(null);
        
        
        this.setVisible(false);
    }//GEN-LAST:event_botonAtrasActionPerformed

    private void botonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegistrarActionPerformed
        try{
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/parking","root","");
            PreparedStatement pst = cn.prepareStatement("insert into park values(?,?,?,?,?,?,?,?,?,?)");
            
            ///////////////////////////////////////
            
            String cadenaHoraEntrada = txt_entrada.getText();
            //String cadenaHoraDefinitiva = "";
            if(cadenaHoraEntrada.substring(1,2).equals(":")){
                
                cadenaHoraEntrada = "0"+txt_entrada.getText();
            }else{
                cadenaHoraEntrada = txt_entrada.getText();
            }
            ////////////////////////////////////////
            
            pst.setString(1,"0");
            pst.setString(2,txt_placa.getText().trim());
            pst.setString(3,comboBox1.getSelectedItem().toString());
            pst.setString(4,txt_modelo.getText().trim());
            pst.setString(5,txt_color.getText().trim());
            pst.setString(6,label_fecha.getText()); //tener en cuenta de donde se obtiene para un parqueo mayor a 24 horas
            //
            pst.setString(7,cadenaHoraEntrada.trim() + " "+tipoHoraE.getSelectedItem().toString());
            pst.setString(8,txt_salida.getText().trim() + " "+tipoHoraS.getSelectedItem().toString());
            //
            pst.setString(9,txt_horas.getText().trim());
            pst.setString(10,txt_valor.getText().trim());
            
            pst.executeUpdate();
            //
            
            
            //System.out.println("*****"+ cadenaHoraEntrada.length());            
            
            /*
            
            if(cadenaHoraEntrada.length() == 5){
                cadenaHoraDefinitiva = cadenaHoraEntrada +":00";
            }
            */
            
            
            
            
            
            
            /*
            else if(cadenaHoraEntrada.substring(5,8).equals(":00")){
                cadenaHoraDefinitiva = cadenaHoraEntrada;
            }
            */
            ///////////////////////////////////////////
            //System.out.println("--"+cadenaHoraDefinitiva);
              
            texto_area = "# PARQUEO : [ " + obtenerNumero() + " ] " +"Placa: " + txt_placa.getText()+ " | " + "Tipo: " + comboBox1.getSelectedItem().toString() 
                    + " | Modelo: " + txt_modelo.getText() + " | Color: " + txt_color.getText() + " | Entrada: "
                    + cadenaHoraEntrada+"\n"; //generar un metodo para obtener la hora entrada al igual q hicimos con ID
            ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            
            //System.out.println(texto_area);
            /*
            txt_area.setText(texto_area);
            */
            //List<String> listaParqueos = new ArrayList();
            text2="";
            listaParqueos.add(texto_area);
            
            for(String texto : listaParqueos){
                //String text2;
                text2 += texto;
                                
            }
            txt_area.setText(text2);
            
            txt_placa.setText("");
            comboBox1.setSelectedItem("");
            txt_modelo.setText("");
            txt_color.setText("");
            txt_entrada.setText("");
            txt_salida.setText("0");
            txt_horas.setText("0");
            txt_valor.setText("0");
            label_status.setText("Registro Exitoso");
            
        }catch(Exception e){
        
        }
    }//GEN-LAST:event_botonRegistrarActionPerformed

    private void boton_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_buscarActionPerformed
        try{
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/parking","root","");
            PreparedStatement pst = cn.prepareStatement("select * from park where ID = ?");
            pst.setString(1, txtBuscar.getText().trim());
            ResultSet rs = pst.executeQuery();
            if(rs.next()){
                txt_numero.setText(rs.getString(1));
                txt_placa.setText(rs.getString("Placa"));
                comboBox1.setSelectedItem(rs.getString("TipoVehiculo"));
                txt_modelo.setText(rs.getString("Modelo"));
                txt_color.setText(rs.getString("Color"));
                //
                txt_entrada.setText(rs.getString("HoraEntrada").substring(0,5));
                tipoHoraE.setSelectedItem(rs.getString("HoraEntrada").substring(6,8));
                //rs.getString("HoraEntrada").substring(6,8);
                //txt_salida.setText(rs.getString("HoraSalida"));
                
            }else{
                JOptionPane.showMessageDialog(null, "Placa no registrada.");
            }
        }catch(Exception e){}
        
    }//GEN-LAST:event_boton_buscarActionPerformed

    private void boton_generarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_generarActionPerformed
        
        String cadenaHoraSalida = txt_salida.getText();
        
        if(cadenaHoraSalida.substring(1,2).equals(":")){
                
                cadenaHoraSalida = "0"+txt_salida.getText();
            }else{
                cadenaHoraSalida = txt_salida.getText();
            }
        txt_salida.setText(cadenaHoraSalida);
        
        generarValor();
        //lo mismo q en el valor de entrada
        try{
            String cadena = "update park set Placa = ?, TipoVehiculo = ?, Modelo = ?, Color = ?, Fecha = ?, "
                    + "HoraEntrada = ?, HoraSalida = ?, Horas = ?, ValorPagar = ? where ID = "; 
            //String cadena = "update parqueos set HoraSalida = ?, Horas = ?, ValorPagar = ' where NoParqueos = ";
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/parking","root","");
            PreparedStatement pst = cn.prepareStatement(cadena + txt_numero.getText());
            
            //pst.setString(1,"0");
            pst.setString(1,txt_placa.getText().trim());
            pst.setString(2,comboBox1.getSelectedItem().toString());
            pst.setString(3,txt_modelo.getText().trim());
            pst.setString(4,txt_color.getText().trim());
            pst.setString(5,label_fecha.getText());
            
            pst.setString(6,txt_entrada.getText().trim()+ " "+tipoHoraE.getSelectedItem().toString());
            pst.setString(7,txt_salida.getText().trim()+ " "+tipoHoraS.getSelectedItem().toString());
            
            pst.setString(8,txt_horas.getText().trim()+ " : " + txt_minutos.getText());
            pst.setString(9,txt_valor.getText().trim());
            //pst.setString(8,label_numero.getText());
            pst.executeUpdate();
            
            label_status.setText("Datos guardados");
            
        }catch(Exception e){}
        //GENERAR EL ARCHIVO DE TEXTO
        String nombreCambiante = txt_numero.getText();
        String ruta = System.getProperty("user.home");
        File archivo1 = new File(ruta + "\\Desktop\\tiquetes\\tiquete No." + nombreCambiante+".txt");
        try{
            PrintWriter salida = new PrintWriter(new FileWriter(archivo1));
            salida.close();
        }catch(IOException ex){
            ex.printStackTrace();
        }
        
        
        //IMPRIMIR LOS DATOS EN EL ARCHIVO 
        
        File archivo = new File(ruta +"\\Desktop\\tiquetes\\tiqueteNo." + nombreCambiante + ".txt");
        try{
            PrintWriter salida = new PrintWriter(new FileWriter(archivo,true));
            
            salida.println("*************************");
            salida.println("****PARQUEADERO DURAN****");
            salida.println("*************************");
            salida.println("**FECHA = " + label_fecha.getText()+"  ***");
            salida.println("*************************");
            salida.println("Tipo   = " + comboBox1.getSelectedItem().toString());
            salida.println("Placa  = " + txt_placa.getText());
            salida.println("Modelo = " + txt_modelo.getText());
            salida.println("Color  = " + txt_color.getText());
            salida.println("-------------------------");
            salida.println("Hora Entrada = " + txt_entrada.getText()+ " "+tipoHoraE.getSelectedItem().toString());
            salida.println("Hora Salida  = " + txt_salida.getText()+ " "+tipoHoraS.getSelectedItem().toString());
            salida.println("-------------------------");
            salida.println("Horas = " + txt_horas.getText()+ " : " + txt_minutos.getText());
            salida.println("-------------------------");            
            salida.println("VALOR A PAGAR = " + txt_valor.getText());    
            salida.close();
            
            //open(archivo);
            Runtime.getRuntime().exec("cmd /c start "+ "C:\\Users\\JONATHAN\\Desktop\\tiquetes\\tiqueteNo." + nombreCambiante + ".txt");
        }catch(IOException ex){
            ex.printStackTrace();
        }
        
        ////////////
        String cadena = "# PARQUEO : [ " + txt_numero.getText() + " ] " +"Placa: " + txt_placa.getText()+ " | " + "Tipo: " + comboBox1.getSelectedItem().toString() 
                    + " | Modelo: " + txt_modelo.getText() + " | Color: " + txt_color.getText() + " | Entrada: "
                    + txt_entrada.getText()+"\n";
        
        
        texto_area="";
        List<String> parqueosActualizar = new ArrayList();
        
        for(String texto : listaParqueos){
            //System.out.println(texto);
            //System.out.println(cadena);           
            
            
            //if(texto.substring(0,35).equals(cadena.substring(0,35))){
            if(texto.equals(cadena)){    
                //saltarsela
                }else{
                    parqueosActualizar.add(texto);
                    
                }
                           
            }
        for(String m : parqueosActualizar){
            //System.out.println("**"+m+"**");
        }
        text2 = "";
        txt_area.setText("");
        listaParqueos = null;
        listaParqueos = parqueosActualizar;
        
        for(String texto : listaParqueos){
                //String text2;
                text2 += texto;
                                
            }
            txt_area.setText(text2);
           
        ReportesDiarios rp = new ReportesDiarios(label_fecha.getText()); 
        rp.GenerarReporteComun();
         //texto_area="";
         
        
        
        
        /*
        //generar reportes automaticos en txt
        String cadena = "# PARQUEO : [ " + txt_numero.getText() + " ] " +"Placa: " + txt_placa.getText()+ " | " + "Tipo: " + comboBox1.getSelectedItem().toString() 
                    + " | Modelo: " + txt_modelo.getText() + " | Color: " + txt_color.getText() + " | Entrada: "
                    + txt_entrada.getText() + " | Hora Salida: " + txt_salida.getText() + " | Horas: " + txt_horas.getText()
                    + " | Valor a Pagar: " + txt_valor.getText();
        String nombreArchivo = "C:\\Users\\JONATHAN\\Desktop\\tiquetes\\reportes\\13-09-2018.txt";
        RegistroVehiculos rv = new RegistroVehiculosImpl();
        rv.agregarParqueo(nombreArchivo, cadena);
        rv.listarParqueo(nombreArchivo);
        //revisar los metodos de arriba despues
        */
        //////////////////////////////////////////////////////
                      
    }//GEN-LAST:event_boton_generarActionPerformed

    private void boton_limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_limpiarActionPerformed
            txt_placa.setText("");
            comboBox1.setSelectedItem("");
            txt_modelo.setText("");
            txt_color.setText("");
            txt_entrada.setText("");
            txt_salida.setText("0");
            txt_horas.setText("0");
            txt_valor.setText("0");
            
            txtBuscar.setText("");
            
           
    }//GEN-LAST:event_boton_limpiarActionPerformed

    private void txt_minutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_minutosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_minutosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(parqueaderoRegistro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(parqueaderoRegistro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(parqueaderoRegistro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(parqueaderoRegistro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new parqueaderoRegistro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAtras;
    private javax.swing.JButton botonRegistrar;
    private javax.swing.JButton boton_buscar;
    private javax.swing.JButton boton_generar;
    private javax.swing.JButton boton_limpiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    public javax.swing.JLabel label_fecha;
    private javax.swing.JLabel label_hora;
    private javax.swing.JLabel label_status;
    private javax.swing.JTextField txtBuscar;
    public javax.swing.JTextArea txt_area;
    private javax.swing.JTextField txt_color;
    private javax.swing.JTextField txt_entrada;
    private javax.swing.JTextField txt_horas;
    private javax.swing.JTextField txt_minutos;
    private javax.swing.JTextField txt_modelo;
    private javax.swing.JLabel txt_numero;
    private javax.swing.JTextField txt_placa;
    private javax.swing.JTextField txt_salida;
    private javax.swing.JTextField txt_valor;
    // End of variables declaration//GEN-END:variables
    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
                getImage(ClassLoader.getSystemResource("interfaces/parqueadero/images/parkingCP.png"));
        return retValue;
    }
    
    public void generarValor(){
        
       
        
        
    //las horas
    int hora = 0;
    int hora_ent = 0;
    int hora_sal = 0;
    
    //valor de la hora a minutos
    int minutosH = 0;
    
    //los minutos
    int minuto = 0;
    int minuto_ent = 0;
    int minuto_sal = 0;
    
    hora_ent = Integer.parseInt(txt_entrada.getText().substring(0,2));
    hora_sal = Integer.parseInt(txt_salida.getText().substring(0,2));
    
    //LA CONVERSION DE HORA MILITAR A HORA AM Y PM. 
    int horaEnt = 0;
    int horaSal = 0;
    
    if(tipoHoraE.getSelectedItem().toString().equals("AM")){
        horaEnt = hora_ent;
        if(hora_ent ==12){
            horaEnt = 0;
        }
    
    }else if(tipoHoraE.getSelectedItem().toString().equals("PM")){
        if(hora_ent == 1){
            horaEnt = 13;
        }else if(hora_ent == 2){
            horaEnt = 14;
        }else if(hora_ent == 3){
            horaEnt = 15;
        }else if(hora_ent == 4){
            horaEnt = 16;
        }else if(hora_ent == 5){
            horaEnt = 17;
        }else if(hora_ent == 6){
            horaEnt = 18;
        }else if(hora_ent == 7){
            horaEnt = 19;
        }else if(hora_ent == 8){
            horaEnt = 20;
        }else if(hora_ent == 9){
            horaEnt = 21;
        }else if(hora_ent == 10){
            horaEnt = 22;
        }else if(hora_ent == 11){
            horaEnt = 23;
        }else if(hora_ent == 12){
            horaEnt = 12;
        }
    }
    
    //la de la salida
    if(tipoHoraS.getSelectedItem().toString().equals("AM")){
        horaSal = hora_sal;
        if(hora_sal ==12){
            horaSal = 0;
        }
    }else if(tipoHoraS.getSelectedItem().toString().equals("PM")){
        if(hora_sal == 1){
            horaSal = 13;
        }else if(hora_sal == 2){
            horaSal = 14;
        }else if(hora_sal == 3){
            horaSal = 15;
        }else if(hora_sal == 4){
            horaSal = 16;
        }else if(hora_sal == 5){
            horaSal = 17;
        }else if(hora_sal == 6){
            horaSal = 18;
        }else if(hora_sal == 7){
            horaSal = 19;
        }else if(hora_sal == 8){
            horaSal = 20;
        }else if(hora_sal == 9){
            horaSal = 21;
        }else if(hora_sal == 10){
            horaSal = 22;
        }else if(hora_sal == 11){
            horaSal = 23;
        }else if(hora_sal == 12){
            horaSal = 12;
        }
    }
    hora_sal = horaSal;
    hora_ent = horaEnt;
    
    ///
    
    minuto_ent = Integer.parseInt(txt_entrada.getText().substring(3,5));
    minuto_sal = Integer.parseInt(txt_salida.getText().substring(3,5));
    ////////////////////////////////////////////no posible
    
    String recordarFechaE = "2018-10-22";
        if(hora_ent < hora_sal){
            hora = hora_sal - hora_ent;

        }else if(hora_ent > hora_sal){
            hora = 24 - hora_ent + hora_sal; 

        }else if(hora_ent == hora_sal && recordarFechaE.equals(label_fecha.getText())){
            if(minuto_ent == minuto_sal){
                hora = 0;

            }
            //else{
            //    hora = 0;
            //}
        }
        
        if(minuto_ent < minuto_sal && recordarFechaE.equals(label_fecha.getText())){
            minuto = minuto_sal - minuto_ent;

        }else if(minuto_ent > minuto_sal && hora_ent != hora_sal && recordarFechaE.equals(label_fecha.getText())){
            minuto = minuto_sal - minuto_ent;   
        }else if(minuto_ent == minuto_sal ){
            minuto = 0;
        }
        
        //OK
        if(!recordarFechaE.equals(label_fecha.getText()) && hora_ent == hora_sal){
            hora = 24;
        }
        
        if(!recordarFechaE.equals(label_fecha.getText()) && minuto_ent > minuto_sal && hora_ent == hora_sal){
            minuto = minuto_sal - minuto_ent;  
    
        }
    
        //la misma hora dia diferente
        if(!recordarFechaE.equals(label_fecha.getText()) && hora_ent == hora_sal && minuto_ent == minuto_sal){
            minutosH = 24*60;
            minuto =0;
        }
    
    
    
    /////////////////////ARREGLAR//////////////////////////////////////////////
    /*
        if(hora_ent < hora_sal){
            hora = hora_sal - hora_ent;

        }else if(hora_ent > hora_sal){
            hora = 24 - hora_ent + hora_sal; 

        }else if(hora_ent == hora_sal){
            if(minuto_ent == minuto_sal){
                hora = 24;
            }else{
                hora = 0;
            }
        }
        minutosH = hora * 60; 
        
        if(minuto_ent < minuto_sal){
            minuto = minuto_sal - minuto_ent;

        }else if(minuto_ent > minuto_sal){
            minuto = minuto_sal - minuto_ent;
        }else if(minuto_ent == minuto_sal){
            minuto = 0;
        }
        if(hora == 24 && minuto_ent < minuto_sal){ //2:30  2:28
            minuto = minuto_sal - minuto_ent;
        }
    */
    ///////////
    /*
    if(minuto_ent < minuto_sal){
        minuto = minuto_sal - minuto_ent;
    
    }else if(minuto_ent > minuto_sal && hora_ent != hora_sal){
        minuto = minuto_sal - minuto_ent;
    }else if(minuto_ent > minuto_sal && hora_ent == hora_sal){
        minuto = minuto_ent - minuto_sal;
    }else{
        minuto = 0;
    }
    */
    minutosH = hora * 60;
    int minutosEnTotal = minutosH + minuto;
    
    if(comboBox1.getSelectedItem().toString().equals("Carro")){
        double valorPagar = minutosEnTotal * 33;
        String valorPagarCadena = Double.toString(valorPagar);
        txt_valor.setText(valorPagarCadena);
    }else if(comboBox1.getSelectedItem().toString().equals("Vehiculo Pesado")){
        double valorPagar = minutosEnTotal * 50;
        String valorPagarCadena = Double.toString(valorPagar);
        txt_valor.setText(valorPagarCadena);
    }else if(comboBox1.getSelectedItem().toString().equals("Moto")){
        double valorPagar = minutosEnTotal * 16;
        String valorPagarCadena = Double.toString(valorPagar);
        txt_valor.setText(valorPagarCadena);
    }
    ///////////////
    //OJO CONVERSION DE MINUTOS A HORA: MINUTOS
    int horaFinal = minutosEnTotal / 60;
    
    String valorCadena = Integer.toString(horaFinal);
    txt_horas.setText(valorCadena);
    
    int minutosRestantes = minutosEnTotal - (horaFinal * 60);
    String valorCadena2 = Integer.toString(minutosRestantes);
    txt_minutos.setText(valorCadena2);
    }
    
    public String obtenerNumero() throws SQLException{
        String numeroParqueo ="";
        try{
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/parking","root","");
            PreparedStatement pst = cn.prepareStatement("select * from park where Placa = ?");
            pst.setString(1, txt_placa.getText().trim());
            ResultSet rs = pst.executeQuery();
            if(rs.next()){
                numeroParqueo = rs.getString(1);
                
                
            }
            }catch(Exception e){}
        return numeroParqueo;
    }
    /*
    public static void abrirRecibo(String archivo){
        try{
            File objFile = new File(archivo);
            
            //Desktop.getDesktop().open(objFile);
        }catch(IOException e){
            e.printStackTrace();
        }
    */
    }
    
       

    

